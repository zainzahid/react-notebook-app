{"version":3,"sources":["components/Note.js","components/NoteList.js","components/NoteDetail.js","components/NoteEdit.js","components/App.js","reportWebVitals.js","index.js"],"names":["Note","note","handleNoteActive","useContext","NotesContext","className","onClick","id","aria-hidden","category","date","title","NoteList","notes","addNewNote","classes","isNoteActive","join","map","i","NoteDetail","openNoteEdit","closeNoteActive","content","NoteEdit","closeNoteEdit","handleNoteChange","deleteNote","handleChange","updatedNote","closeEditing","placeholder","type","value","onChange","e","target","rows","React","createContext","exampleNoteList","App","useState","noteList","setNoteList","activeNoteId","setActiveNoteId","activeNote","find","console","log","editMode","setEditMode","notesContextValue","undefined","tempNoteList","index","findIndex","newNote","Date","toString","toLocaleDateString","filter","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.efe080ec.chunk.js","sourcesContent":["import React, { useContext } from 'react'\r\nimport { NotesContext } from './App'\r\n\r\nfunction Note({note}) {\r\n\r\n    const { handleNoteActive } = useContext(NotesContext);\r\n    return (\r\n        <div className=\"note-card bg-white\" onClick={() => {handleNoteActive(note.id)}}>\r\n            <div className=\"note-info\">\r\n                <p className=\"note-info-item\">\r\n                    <i className=\"fa fa-list-alt\" aria-hidden=\"true\"></i> {note.category !==\"\" ? note.category: \"No Category\"}\r\n                    </p>\r\n                <p className=\"note-info-item\">\r\n                    <i className=\"fa fa-calendar\" aria-hidden=\"true\"></i> {note.date}\r\n                </p>\r\n            </div>\r\n\r\n            <p>{note.title !== \"\" ? note.title: \"New Note\"}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Note\r\n","import React, { useContext } from 'react';\r\nimport Note from './Note';\r\nimport { NotesContext } from './App';\r\n\r\nfunction NoteList({ notes }) {\r\n    const { addNewNote, isNoteActive } = useContext(NotesContext);\r\n\r\n    const classes = [\"list-section\", \"p-1\", isNoteActive() ? \"div-hide\" : \"div-show\"].join(\" \");\r\n\r\n    return (\r\n        <div className={classes}>\r\n            <button className=\"btn-add\" onClick={() => addNewNote()}>Add New Note</button>\r\n            {\r\n                notes.map(( note,i) => \r\n                    <Note key={i} note={note} />\r\n                )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoteList","import React, { useContext } from 'react';\r\nimport { NotesContext } from './App';\r\n\r\nfunction NoteDetail({ note }) {\r\n    const { openNoteEdit, closeNoteActive } = useContext(NotesContext);\r\n    return (\r\n        <div className=\"p-1 detail-section\" onClick={() => {openNoteEdit(note.id)}}>\r\n            <div className=\"detail-section-btn\">\r\n                <a className=\"detail-section-btn-edit\" onClick={ () => {openNoteEdit(note.id)} }><i className=\"fa fa-edit\"></i></a>\r\n                <a className=\"detail-section-btn-close\" onClick={ () => { closeNoteActive()} }>&#10006;</a>\r\n            </div>\r\n            <h3 className=\"detail-section-title\">{note.title}</h3>\r\n            <h4 className=\"detail-section-cat\">{note.category} &nbsp; &#8226; &nbsp; {note.date}</h4>\r\n            <p className=\"detail-section-content\">{note.content}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoteDetail\r\n","import React, { useContext } from 'react';\r\nimport { NotesContext } from './App';\r\n\r\nfunction NoteEdit({note}) {\r\n    const { closeNoteEdit, handleNoteChange, deleteNote } = useContext(NotesContext);\r\n\r\n    const handleChange = (updatedNote) => {\r\n        /* passing overrighting note with updated note & passing to handleNoteChange Fn\r\n        in App component which will update noteList state */\r\n        handleNoteChange(note.id, {...note, ...updatedNote});\r\n    }\r\n\r\n    const closeEditing = () => {\r\n        // if user leave new note empty, draft it with title 'New Note'\r\n        if (note.title === '') {\r\n            handleChange({title: 'New Note'})\r\n        }\r\n        closeNoteEdit();\r\n    }\r\n\r\n    const _deleteNote = () => {\r\n        closeEditing();\r\n        deleteNote(note.id);\r\n    }\r\n\r\n    return (\r\n        <div className=\"p-1 detail-section p-1\">\r\n            <div className=\"detail-section-btn my-1\">\r\n                {/* <a className=\"detail-section-btn-save\" onClick={ () => closeEditing() }><i className=\"fa fa-save\"></i></a><br/>     */}\r\n                <a className=\"detail-section-btn-delete\" onClick={ () => _deleteNote(note.id) }><i className=\"fa fa-trash\"></i></a><br/>\r\n                <a className=\"detail-section-btn-close\" onClick={ () => closeEditing() }>&#10006;</a>    \r\n            </div>\r\n            <input \r\n                className=\"detail-section-title\"\r\n                placeholder=\"Title Here\" \r\n                type=\"text\" value={note.title} \r\n                onChange={e => handleChange({title: e.target.value})}>\r\n            </input>\r\n            <input \r\n                className=\"detail-section-cat\"\r\n                placeholder=\"Category Here\" \r\n                type=\"text\" value={note.category} \r\n                onChange={e => handleChange({category: e.target.value})}>\r\n            </input>\r\n            <textarea \r\n                className=\"detail-section-content\"\r\n                placeholder=\"Your Note Here...\" \r\n                value={note.content} \r\n                onChange={e => handleChange({content: e.target.value})} \r\n                rows=\"10\">\r\n            </textarea>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NoteEdit\r\n","import '../css/App.css';\r\nimport NoteList from './NoteList';\r\nimport NoteDetail from './NoteDetail'\r\nimport NoteEdit from './NoteEdit'\r\nimport React,{ useState } from 'react';\r\n\r\nexport const NotesContext = React.createContext()\r\n\r\nfunction App() {\r\n  const [noteList, setNoteList] = useState(exampleNoteList);\r\n\r\n  const [activeNoteId, setActiveNoteId] = useState();\r\n  const activeNote = noteList.find(note => note.id === activeNoteId);\r\n  console.log('activeNote-->', activeNote);\r\n\r\n  const [editMode, setEditMode] = useState(false);\r\n\r\n  const notesContextValue = {\r\n    handleNoteActive,\r\n    openNoteEdit,\r\n    closeNoteActive,\r\n    closeNoteEdit,\r\n    handleNoteChange,\r\n    addNewNote,\r\n    deleteNote,\r\n    isNoteActive\r\n  }\r\n\r\n  function handleNoteActive(id) {\r\n    setEditMode(false);\r\n    setActiveNoteId(id);\r\n    \r\n  }\r\n\r\n  function closeNoteActive(id) {\r\n    setEditMode(false);\r\n    setActiveNoteId(undefined);\r\n  }\r\n\r\n  function openNoteEdit(id) {\r\n    setEditMode(true);\r\n  }\r\n\r\n  function closeNoteEdit(id) {\r\n    setEditMode(false);\r\n  }\r\n\r\n  function handleNoteChange(id, updatedNote) {\r\n    // Cloning noteList\r\n    const tempNoteList = [...noteList];\r\n    // finding index on which note need update\r\n    const index = tempNoteList.findIndex(note => note.id === id);\r\n    // updating note on found index\r\n    tempNoteList[index] = updatedNote;\r\n    // updating noteListState with updated tempNoteList\r\n    setNoteList(tempNoteList);\r\n  }\r\n\r\n  function addNewNote() {\r\n    const newNote = {\r\n      id:  new Date().toString(),\r\n      title: '',\r\n      category: '',\r\n      content: '',\r\n      date: new Date().toLocaleDateString()\r\n    };\r\n    setNoteList([...noteList, newNote]);\r\n    setEditMode(true);\r\n    setActiveNoteId(newNote.id);\r\n  }\r\n\r\n  function deleteNote(id) {\r\n    setNoteList(noteList.filter(note => note.id !== id));\r\n  }\r\n\r\n  function isNoteActive() {\r\n    return activeNote === undefined ? false: true;\r\n  }\r\n\r\n  return (\r\n    <NotesContext.Provider value={notesContextValue}>\r\n      <div className=\"sections-container\">\r\n        <NoteList notes={noteList} />\r\n    \r\n        {\r\n          isNoteActive() && !editMode && <NoteDetail note={activeNote}  />\r\n        }\r\n        {\r\n          isNoteActive() && editMode && <NoteEdit note={activeNote}  />\r\n        }\r\n      </div>\r\n      \r\n    </NotesContext.Provider>\r\n  );\r\n}\r\n\r\nconst exampleNoteList = [];\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'font-awesome/css/font-awesome.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}